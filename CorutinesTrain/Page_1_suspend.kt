package corutines

import kotlinx.coroutines.delay

// !!! Для работы с корутинами в build.gradle.kts не забываем подключить зависимость
// implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")

/*Начиная с самых простых примеров, шаг за шагом попробуем разобраться в корутинах.
Прежде всего, напишем немного кода, без корутин, с модификатором suspend. Этот модификатор
указывает, что функция может приостановить свое выполнение и потом возобновить через какое-то время.
Функции с модификатором suspend могут быть вызваны только из других функций с таким же модификатором или
из корутин. Раньше мы писали вот так fun main() {и какой-то код внутри}, но если мы хотим вызвать внутри main
suspend функцию то нужно добавить к main() этот модификатор */

// модификатор suspend
suspend fun main() {

    // напишем небольшой таймер обратного отчёта, который будет выводить в консоль от 10 до 0
    for (counter in 10 downTo 0) {
        println(counter)
        delay(1000)
    }

/*Если мы зажмем кнопку ctrl и нажмём на delay, то программа покажет, что delay является публичной suspend
функцией, в которую передаётся количество миллисекунд, и на это время будет выполнена задержка выполнения кода.
Так как, delay является suspend функцией, то может быть запущена только из другой suspend функции или
корутины. Поэтому мы и добавили в main модификатор suspend. Запустим код и посмотрим как он выполнится*/


    // переходим на следующую страницу
}